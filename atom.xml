<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>codeTalk</title>
  <subtitle>好事是要做的，前程也是要问的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-25T12:21:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zjcai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>极光推送集成小记</title>
    <link href="http://yoursite.com/2017/03/25/%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81%E9%9B%86%E6%88%90%E5%B0%8F%E8%AE%A1/"/>
    <id>http://yoursite.com/2017/03/25/极光推送集成小计/</id>
    <published>2017-03-25T09:01:32.000Z</published>
    <updated>2017-03-25T12:21:08.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;极光推送集成小记&quot;&gt;&lt;a href=&quot;#极光推送集成小记&quot; class=&quot;headerlink&quot; title=&quot;极光推送集成小记&quot;&gt;&lt;/a&gt;极光推送集成小记&lt;/h1&gt;&lt;h4 id=&quot;资料整理&quot;&gt;&lt;a href=&quot;#资料整理&quot; class=&quot;headerlink&quot; title=&quot;资料整理&quot;&gt;&lt;/a&gt;资料整理&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jiguang.cn/dev/#/app/list#dev&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;极光推送服务网址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.jiguang.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;极光推送文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;步骤小计&quot;&gt;&lt;a href=&quot;#步骤小计&quot; class=&quot;headerlink&quot; title=&quot;步骤小计&quot;&gt;&lt;/a&gt;步骤小计&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;注册极光账号&lt;/li&gt;
&lt;li&gt;创建应用获取AppKey&lt;/li&gt;
&lt;li&gt;上传开发证书和生产证书（&lt;a href=&quot;http://www.jianshu.com/p/c60eb29db67e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何得到推送证书?&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;代码集成&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;pod ‘JPush’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;集成接口然后引入头文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;JPush/JPUSHService.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;填入代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //极光推送&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JPUSHRegisterEntity *entity = [[JPUSHRegisterEntity alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;entity.types = JPAuthorizationOptionAlert|JPAuthorizationOptionBadge|JPAuthorizationOptionSound;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[JPUSHService registerForRemoteNotificationConfig:entity delegate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// init Push&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// notice: 2.1.5版本的SDK新增的注册方法，改成可上报IDFA，如果没有使用IDFA直接传nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如需继续使用pushConfig.plist文件声明appKey等配置内容，请依旧使用[JPUSHService setupWithOption:launchOptions]方式初始化。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *app_key_jpush = @&amp;quot;你自己的值，在应用设置里可以看到&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[JPUSHService setupWithOption:nil appKey:app_key_jpush channel:@&amp;quot;App Store&amp;quot; apsForProduction:NO];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发送token&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//注册远程通知成功&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;接收到deviceToken&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Required - 注册 DeviceToken&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [JPUSHService registerDeviceToken:deviceToken];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%@&amp;quot;, deviceToken.description);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//注册远程通知失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //Optional&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;did Fail To Register For Remote Notifications With Error: %@&amp;quot;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实现代理&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;JPUSHRegisterDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#pragma mark - 极光推送&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#pragma mark- JPUSHRegisterDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// iOS 10 Support&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)jpushNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(NSInteger))completionHandler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSDictionary * userInfo = notification.request.content.userInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if([notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [JPUSHService handleRemoteNotification:userInfo];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UNNotificationPresentationOptions options = UNNotificationPresentationOptionSound | UNNotificationPresentationOptionAlert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    completionHandler(options); // 需要执行这个方法，选择是否提醒用户，有Badge、Sound、Alert三种类型可以选择设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// iOS 10 Support&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)jpushNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Required&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSDictionary * userInfo = response.notification.request.content.userInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if([response.notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [JPUSHService handleRemoteNotification:userInfo];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    completionHandler();  // 系统要求执行这个方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; jpush设置别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @param userString 别名 - 用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setAliasWithString:(NSString *)userString&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [JPUSHService setTags:nil alias:userString fetchCompletionHandle:^(int iResCode, NSSet *iTags, NSString *iAlias) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;rescode: %d, \ntags: %@, \nalias: %@\n&amp;quot;, iResCode, iTags , iAlias);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)loginSucess&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self setAliasWithString:g_user.userString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个基本的极光推送就差不多弄好了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;极光推送集成小记&quot;&gt;&lt;a href=&quot;#极光推送集成小记&quot; class=&quot;headerlink&quot; title=&quot;极光推送集成小记&quot;&gt;&lt;/a&gt;极光推送集成小记&lt;/h1&gt;&lt;h4 id=&quot;资料整理&quot;&gt;&lt;a href=&quot;#资料整理&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>网络编程</title>
    <link href="http://yoursite.com/2016/07/22/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/07/22/网络编程/</id>
    <published>2016-07-22T09:01:32.000Z</published>
    <updated>2016-07-22T09:05:04.000Z</updated>
    
    <content type="html">&lt;center&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;&lt;br&gt;&lt;br&gt;大家听说过烽火戏诸侯的故事没？&lt;br&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    烽火戏诸侯，指西周时周幽王，为褒姒（bāo sì）一笑，点燃了烽火台，戏弄了诸侯。&lt;br&gt;    褒姒看了果然哈哈大笑。幽王很高兴，因而又多次点燃烽火。后来诸侯们都不相信了，也&lt;br&gt;    就渐渐不来了。后来犬戎攻破镐京，杀死周幽王，后来周幽王的儿子周平王即位，开始了&lt;br&gt;    东周时期&lt;br&gt;&lt;br&gt;&lt;br&gt;这和现代通讯技术有什么关系？别急，慢慢看，会有关系的！&lt;br&gt;&lt;br&gt;在古代，通讯技术不发达，人们信息的交流方式有限，通讯基本靠吼 - 通过声音。但也有聪明的人想出了可以快速传播信息的方法，比如“烽火台”，当“京都”受到进攻的时候，马上点燃烽火台，那么几里外的相邻烽火台看到之后马上也点燃自己的烽火台(在镐京附近的骊山（在今陕西临潼东南）一带修筑了20多座烽火台，每隔几里地就是一座），以此通知附近的诸侯赶来救援。这种通讯方式就是点火的时候慢一点，对于2座相邻的烽火台，如果火升起来来了，那么看到火的时间在几微秒内就能看到。因为火是能看见的，就是通过光传播，光在空气的传播速度是3 &lt;/em&gt; 10^8 m/s。贼快！&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-“同学们，为什么打雷的时候先看见闪电再听见声音？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-“因为眼睛在前面，耳朵在后面！”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-“老师，别啊，我回答错了就错了，我错了，错了还不行嘛！你快把板砖放下！”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;为什么打雷的时候先看见闪电在听见声音？&lt;br&gt;&lt;br&gt;正确答案：&lt;/strong&gt;因为光的的传播速度比声音的传播速度快的多！&lt;strong&gt;

&lt;/strong&gt;光是一种电磁波!&lt;strong&gt;

&lt;/strong&gt;光是一种电磁波!&lt;strong&gt;

&lt;/strong&gt;光是一种电磁波!&lt;strong&gt;&lt;br&gt;&lt;br&gt;重要的事情说3遍，而电磁波是现代通讯技术的中信息传播的主要载体，生活中的WiFi，蓝牙也是电磁波，小区开门那个刷一下开门那个其实是RF，也有NFC，这也是电磁波。大家大学刷过饭卡没？为什么放上去能扣款，你的钱还真少了。其实饭卡用的是RFID，也是一种电磁波。公交卡大多数用也是NFC，它也是种电磁波。目前的技术下，关于电磁波的通讯手段也就这些，另外跟大家说下LiFi技术（处于研究阶段），就是利用可见光通讯的技术（自己百度）。我只是想到一个非常搞笑的场景：我给你发了道光，快看，就是天上那道彩虹！，对方接受的时候可以是一段话或者一篇文章。”&lt;br&gt;&lt;br&gt;这就是题目的来源：看！我给你发了一道光，那道光代表爱你！（哈哈，几年或者十几年后真的可能实现哦~）&lt;br&gt;&lt;br&gt;其实这没什么惊奇的，WiFi早就这样了，当你微信发个朋友圈的时候，聊天的时候，那些信息其实是通过你家的路由器，或者附近的基站以wifi（电磁波）为载体，发到腾讯的服务器上&lt;br&gt;。不过WiFi你看不见摸不到。Lifi（可见光，也是种电磁波）看的见，但是也摸不着。为什么wifi看不见？因为人类的眼睛进化成这样子 - 人眼可以接收到的电磁波，波长大约在380至780nm之间。什么叫波长？自己百度，这里我就展开到这里，至于为什么人类的眼睛为什么这样以及电磁波是什么？大家自己研究下吧，我限于篇幅就不具体展开了。文末附录里可能会提到。&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;电磁波，又称电磁辐射，是由同相振荡且互相垂直的电场与磁场在空间中以波的形式传递&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;能量和动量，其传播方向垂直于电场与磁场构成的平面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;电磁波的传播速度是光速，以光的速度绕地球一周只要0.134秒。贼快！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;大家平时聊天的时候有时候可等待了好几秒才收到消息，因为虽然我们的信息在空气中传播的很快，但是你手机里的信息手机要处理，传到路由器上路由器要处理，传到基站上基站要处理，所以有时候是比较慢的。具体怎么处理？这就是我今天要讲的主要内容，今天我整理了3个方面的知识，没有计算机基础的人只看前言和第一节，附录就够了，有计算机基础的可以看后面的章节，欢迎后台留言讨论！&lt;br&gt;&lt;br&gt;* &lt;/strong&gt;一:现代通讯技术&lt;strong&gt;&lt;br&gt;* &lt;/strong&gt;二:TCP/IP协议族&lt;strong&gt;&lt;br&gt;* &lt;/strong&gt;三:iOS中的网络编程&lt;strong&gt;&lt;br&gt;* &lt;/strong&gt;附录&lt;strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;center&gt;&lt;/center&gt;&lt;/strong&gt;一:现代通讯技术**

&lt;hr&gt;
&lt;p&gt;电磁波首先由詹姆斯·麦克斯韦于1865年预测出来，而后由德国物理学家海因里希·赫兹于1887年至1888年间在实验中证实存在。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;互联网的历史&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1986年，美国国家科学基金会创建了大学之间互联的骨干网络NSFNET，这是互联网历史上重要的一步。在1994年，NSFNET转为商业运营。1995年随着网络开放予商业，互联网中成功接入的比较重要的其他网络包括Usenet、Bitnet和多种商用X.25网络。&lt;br&gt;1990年代，整个网络向公众开放。1991年8月，蒂姆·伯纳斯-李在瑞士创立HTML、HTTP和欧洲粒子物理研究所的最初几个网页之后两年，他开始宣扬其万维网项目。在1993年，Mosaic网页浏览器版本1.0被发布了，在1994年晚期，公共利益在前学术和技术的互联网上稳步增长。1996年，“Internet”（互联网）一词被广泛的流传，不过是指几乎整个的万维网。&lt;/p&gt;
&lt;p&gt;其间，经过一个十年，互联网成功地容纳了原有的计算机网络中的大多数（尽管像FidoNet的一些网络仍然保持独立）。这一快速发展要归功于互联网没有中央控制，以及互联网协议非私有的特质，前者造成了互联网有机的生长，而后者则鼓励了厂家之间的兼容，并防止了某一个公司在互联网上称霸。&lt;br&gt;互联网的成功，可从“Internet”这个术语的大、小写分化窥知一二。最初，互联网一词代表那些使用IP协议架设而成的网络，而今天，它已引申泛指各种类型的网络，不再局限于IP网络。于是以小写的互联网（internet，开头的“i”是小写字母）为任何分离的实体网络之集合，这些网络以一组通用的协议相连，形成逻辑上的单一网络。而大写的互联网（Internet，开头的“I”是大写字母）专指前身为ARPA网，后使用IP协议将各种实体网络链接成此单一逻辑网络。大写的互联网是小写互联网的其中一种形式，反过来却不然。[4]2002年起，有学者开始提议将“internet”一词用小写表示，理由是互联网已经成为人类生活的一部分，失去了专有的意义[5]；2016年，美联社认为“互联网”已和“电话”一样成为一件一般的事物，不具有专属商标的意义，于是开始在其格式手册中规定“internet”和“web”一词全部小写，纽约时报也随后跟进，[6][7]但同时亦有媒体提出不同意见[8]。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;互联网的相关协议&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最底层的是IP协议（英语：Internet Protocol，即互联网协议），是用于报文交换网络的一种面向数据的协议，这一协议定义了数据包在网际传送时的格式。目前使用最多的是IPv4版本，这一版本中用32位定义IP地址，尽管地址总数达到43亿，但是仍然不能满足现今全球网络飞速发展的需求，因此IPv6版本应运而生。在IPv6版本中，IP地址共有128位，“几乎可以为地球上每一粒沙子分配一个IPv6地址”。IPv6目前并没有普及，许多互联网服务提供商并不支持IPv6协议的连接。但是，可以预见，将来在IPv6的帮助下，任何家用电器都有可能连入互联网。&lt;br&gt;上一层是UDP协议和TCP协议，它们用于控制数据流的传输。UDP是一种不可靠的数据流传输协议，仅为网络层和应用层之间提供简单的接口。而TCP协议则具有高的可靠性，通过为数据报加入额外信息，并提供重发机制，它能够保证数据不丢包、没有冗余包以及保证数据包的顺序。对于一些需要高可靠性的应用，可以选择TCP协议；而相反，对于性能优先考虑的应用如流媒体等，则可以选择UDP协议。&lt;br&gt;最顶层的是一些应用层协议，这些协议定义了一些用于通用应用的数据报结构，其中包括：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS：域名服务；&lt;/li&gt;
&lt;li&gt;FTP：服务使用的是文件传输协议；&lt;/li&gt;
&lt;li&gt;HTTP：所有的Web页面服务都是使用的超级文本传输协议；&lt;/li&gt;
&lt;li&gt;POP3：邮局协议；&lt;/li&gt;
&lt;li&gt;SMTP：简单邮件传输协议；&lt;/li&gt;
&lt;li&gt;Telnet：远程登陆等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外我提一点，在智能家居，移动设备接入领域，MQTT也是非常流行的！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;协议&lt;/code&gt;：简单的理解就是一种约定，发送端和接收端共同约定好的！这样你的信息才能以各种形式传播，在空气中以电磁波的形式，在光纤中以光的形式，在数字电路中以电信号的方式，怎么转换？怎么传输？这些都是协议中商量好的，所以对方接受到这些信息后也能正确的解释成“正确的信息”&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;strong&gt;二：TCP/IP协议族&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1156719-5ab11b14ed460183.png?imageMogr2/auto-orient/strip%7CimageView2/2&quot; alt=&quot;TCP/IP协议族&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一”跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多”跳”的基础上创建相互的数据通路。 如想分析更普遍的网络通信问题，ISO的OSI模型也能起更好的帮助作用。 因特网协议族是一组实现支持因特网和大多数商业网络运行的协议栈的网络传输协议。它有时也被称为TCP/IP协议组，这个名称来源于其中两个最重要的协议：传输控制协议（TCP）和因特网协议（IP），它们也是最先定义的两个协议。 同许多其他协议一样网络传输协议也可以看作一个多层组合，每层解决数据传输中的一组问题并且向使用这些低层服务的高层提供定义好的服务。高层逻辑上与用户更为接近，所处理数据更为抽象，它们依赖于低层将数据转换成最终能够进行实体控制的形式。 网络传输协议能够大致匹配到一些厂商喜欢使用的固定7层的OSI模型。然而这些层并非都能够很好地与基于ip的网络对应（根据应用的设计和支持网络的不同它们确实是涉及到不同的层）并且一些人认为试图将因特网协议组对应到OSI会带来混淆而不是有所帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TCP/IP协议族按照层次由上到下，层层包装。最上面的就是应用层了，这里面有http，ftp,等等我们熟悉的协议。而第二层则是传输层，著名的TCP和UDP协议就在这个层次（不要告诉我你没用过udp玩星际）。第三层是网络层，IP协议就在这里，它负责对数据加上IP地址和其他的数据（后面会讲到）以确定传输的目标。第四层是叫数据链路层，这个层次为待传送的数据加入一个以太网协议头，并进行&lt;strong&gt;&lt;em&gt;CRC&lt;/em&gt;&lt;/strong&gt;编码，为最后的数据传输做准备。再往下则是硬件层次了，负责网络的传输，这个层次的定义包括网线的制式，网卡的定义等等（这些我们就不用关心了，我们也不做网卡），所以有些书并不把这个层次放在tcp/ip协议族里面，因为它几乎和tcp/ip协议的编写者没有任何的关系。发送协议的主机从上自下将数据按照协议封装，而接收数据的主机则按照协议从得到的数据包解开，最后拿到需要的数据。这种结构非常有栈的味道，所以某些文章也把tcp/ip协议族称为tcp/ip协议栈。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于TCP/IP协议族，要细讲的话一本书也讲不完，我这里提一下就好，因为具体的话我也不懂。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;strong&gt;三:iOS中的网络编程&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有原生的代码和引入第三方库AFNetworking，我讲下引入AFNetworking的代码，原生的用的比较少&lt;/p&gt;
&lt;p&gt;1.HTTP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get请求&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	//现实中很少用到，这是在AFNetWorking中的接口，调用下就好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	- (AFHTTPRequestOperation *)GET:(NSString *)URLString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     parameters:(id)parameters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        success:(void (^)(AFHTTPRequestOperation *operation, id responseObject))success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        failure:(void (^)(AFHTTPRequestOperation *operation, NSError *error))failure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AFHTTPRequestOperation *operation = [self HTTPRequestOperationWithHTTPMethod:@&amp;quot;GET&amp;quot; URLString:URLString parameters:parameters success:success failure:failure];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.operationQueue addOperation:operation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return operation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;post请求:地址被我改了，避免信息泄露，大家见谅&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSString *httpString = [NSString stringWithFormat:@&amp;quot;http://123.123.240.1:8080/test/ios/login?username=%@&amp;amp;password=%@&amp;quot;,userName,password];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 初始化Manager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 不加上这句话，会报“Request failed: unacceptable content-type: text/plain”错误，因为我们要获取text/plain类型数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    manager.responseSerializer = [AFHTTPResponseSerializer serializer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // post请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [manager POST:httpString parameters:nil constructingBodyWithBlock:^(id  _Nonnull formData) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 拼接data到请求体，这个block的参数是遵守AFMultipartFormData协议的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; progress:^(NSProgress * _Nonnull uploadProgress) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 这里可以获取到目前的数据请求的进度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 请求成功，解析数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSError *error = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        id object = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingAllowFragments error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(error)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [SVProgressHUD showErrorWithStatus:@&amp;quot;JSON数据解析出错&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if ([object isKindOfClass:[NSDictionary class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                BOOL sucess = [object[@&amp;quot;success&amp;quot;]boolValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if (sucess) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [SVProgressHUD dismiss];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [self pushToMainVC];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [SVProgressHUD showErrorWithStatus:@&amp;quot;用户名或密码错误&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [_passwordView.layer addAnimation:[self errorAnimation] forKey:@&amp;quot;shakeAnimation&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatch_async(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [SVProgressHUD showInfoWithStatus:@&amp;quot;登录失败&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 请求失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSLog(@&amp;quot;请求失败:%@&amp;quot;, [error localizedDescription]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSDictionary *userInfoDic = [error userInfo];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSLog(@&amp;quot;%@&amp;quot;,userInfoDic);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.TCP&lt;br&gt;参见4.socket&lt;/p&gt;
&lt;p&gt;3.UDP&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  监听发送特定端口下的广播&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  监听端口：1992&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  发送端口：1995&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)creatUDPSocket&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _asyncUdpSocket = [[AsyncUdpSocket alloc]initIPv4];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _asyncUdpSocket.delegate = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_asyncUdpSocket receiveWithTimeout:-1 tag:0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSError *error = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_asyncUdpSocket enableBroadcast:YES error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BOOL isBinded = [_asyncUdpSocket bindToPort:UDP_LOCAL_PORT error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (isBinded) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;绑定端口失败:%@&amp;quot;,error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_asyncUdpSocket close];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //倒计时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _times = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _sendTimmer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(cuntDown) userInfo:nil repeats:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_sendTimmer fire];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  发送UDP广播数据，唤醒空调,新逻辑：工装主动会发，不必唤醒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)sendData&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char szData[2] = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    szData[0] = 0xBE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    szData[1] = 0x01;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSData *scanData = [NSData dataWithBytes:szData length:2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_asyncUdpSocket sendData:scanData toHost:UDP_HOST port:UDP_SEND_PORT withTimeout:-1 tag:0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _times ++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_indicatorLabel setText:[NSString stringWithFormat:_TEXT(@&amp;quot;正在连接...%ld&amp;quot;),(long)(k_config_time_out-_times)]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (_times &amp;gt; k_config_time_out) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self configFail];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_sendTimmer invalidate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _sendTimmer = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)cuntDown&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _times ++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_indicatorLabel setText:[NSString stringWithFormat:_TEXT(@&amp;quot;正在连接...%ld&amp;quot;),(long)(k_config_time_out-_times)]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (_times &amp;gt; k_config_time_out) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self configFail];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_sendTimmer invalidate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _sendTimmer = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#pragma mark - AsyncUdpSocketDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  UDP接收到消息的回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param sock UDP对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param data 接收到的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param tag  标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param host 链接地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param port 端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @return 返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)onUdpSocket:(AsyncUdpSocket *)sock didReceiveData:(NSData *)data withTag:(long)tag fromHost:(NSString *)host port:(UInt16)port&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//这里根据数据可以做相应的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4.Socket 一个全局socket，.m文件中的实现&lt;/p&gt;
&lt;p&gt;因为我全部贴上的话超过微信字数限制了，我就贴一部分代码，有兴趣的后台留言联系，我把文件发你&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (LGSocketClient *)sharedSocketServe &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @synchronized(self) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(socketServe == nil) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            socketServe = [[[self class] alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            socketServe.socket = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return socketServe;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+(id)allocWithZone:(NSZone *)zone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @synchronized(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (socketServe == nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            socketServe = [super allocWithZone:zone];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            socketServe.socket = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return socketServe;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)startConnectSocket&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSInteger intergerReturn = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(self.socket)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self.socket disconnect];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.socket = [[AsyncSocket alloc] initWithDelegate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    self.socket = [[AsyncSocket alloc] initWithDelegate:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    [self.socket setRunLoopModes:[NSArray arrayWithObject:NSRunLoopCommonModes]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.socket setRunLoopModes:[NSArray arrayWithObject:NSRunLoopCommonModes]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intergerReturn = [self SocketOpen:self.host port:TCP_PORT];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return intergerReturn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)SocketOpen:(NSString*)addr port:(NSInteger)port&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSInteger intergerReturn = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (![self.socket isConnected])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSError *error = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(!addr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self.socket connectToHost:addr onPort:port withTimeout:TIME_OUT error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intergerReturn = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intergerReturn = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return intergerReturn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//断开连接及那些代理方法就不贴了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;center&gt;&lt;strong&gt;附录&lt;/strong&gt;&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;主要是本文涉及到的一些名词解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;电磁波：&lt;/p&gt;
&lt;p&gt;  电磁波，又称电磁辐射，是由同相振荡且互相垂直的电场与磁场在空间中以波的形式传递能量和动量，其传播方向垂直于电场与磁场构成的平面。电磁辐射的载体为光子，不需要依靠介质传播，在真空中的传播速度为光速。电磁辐射可按照频率分类，从低频率到高频率，主要包括无线电波、微波、红外线、可见光、紫外线、X射线和伽马射线。人眼可接收到的电磁辐射，波长大约在380至780nm之间，称为可见光。只要是本身温度大于绝对零度的物体，都可以发射电磁辐射，而世界上并不存在温度等于或低于绝对零度的物体。因此，人们周边所有的物体时刻都在进行电磁辐射。尽管如此，只有处于可见光频域以内的电磁波，才可以被人们肉眼看到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TCP/IP协议族：&lt;/p&gt;
&lt;p&gt;  互联网协议族（英语：Internet Protocol Suite，缩写为IPS）[1]，是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为这个协议家族的两个核心协议，包括TCP（传输控制协议）和IP（网际协议），为这个家族中最早通过的标准。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CRC:&lt;/p&gt;
&lt;p&gt;  循环冗余校验（英语：Cyclic redundancy check，通称“CRC”）是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函數，主要用来检测或校验数据传输或者保存后可能出现的错误。生成的数字在传输或者存储之前计算出来并且附加到数据后面，然后接收方进行检验确定数据是否发生变化。一般来说，循环冗余校验的值都是32位的整数。由于本函数易于用二进制的电脑硬件使用、容易进行数学分析并且尤其善于检测传输通道干扰引起的错误，因此获得广泛应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;scoket&lt;/p&gt;
&lt;p&gt;  柏克莱套接字（英语：Berkeley sockets） ，又称为BSD 套接字(BSD sockets)是一种应用程序接口（API），用于网际插座（Internet socket）与Unix域套接字，包括了一个用C语言写成的应用程序开发库，主要用于实现进程间通讯，在计算机网络通讯方面被广泛使用。&lt;/p&gt;
&lt;p&gt;  Berkeley套接字（也作BSD套接字应用程序接口）刚开始是4.2BSD Unix操作系统（于1983发布）的一套应用程序接口。然而，由于AT&amp;amp;T的专利保护着UNIX，所以只有在1989年伯克利大学才能自由地发布自己的操作系统和网络库。&lt;/p&gt;
&lt;p&gt;  Berkeley套接字应用程序接口形成了事实上的网络套接字的标准精髓。 大多数其他的编程语言使用与这套用C语言写成的应用程序接口[1] 类似的接口。 这套应用程序接口也被用于Unix域套接字（Unix domain sockets），后者可以在单机上为进程间通讯（IPC）的接口。&lt;/p&gt;
&lt;p&gt;  这种基于流的传输层接口（TLI）为套接字应用程序接口提供了一种选择。 不过，最近提供TLI应用程序接口的的系统同时也提供Berkeley套接字应用程序接口&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/center&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;&lt;br&gt;&lt;br&gt;大家听说过烽火戏诸侯的故事没？&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Blocks与多线程编程</title>
    <link href="http://yoursite.com/2016/07/20/block%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/07/20/block与多线程编程/</id>
    <published>2016-07-20T07:50:32.000Z</published>
    <updated>2016-07-21T03:31:13.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在iOS开发中，当涉及网络操作及复杂任务的时候，我们就要使用多线程编程，而多线程编程中用到大量的block，本文就来讲讲&lt;strong&gt;Blocks&lt;/strong&gt;与&lt;strong&gt;多线程编程&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;Blocks的介绍与使用&quot;&gt;&lt;a href=&quot;#Blocks的介绍与使用&quot; class=&quot;headerlink&quot; title=&quot;Blocks的介绍与使用&quot;&gt;&lt;/a&gt;Blocks的介绍与使用&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;什么是Blocks&lt;/li&gt;
&lt;li&gt;Blocks的语法规则&lt;/li&gt;
&lt;li&gt;Blocks的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;多线程编程&quot;&gt;&lt;a href=&quot;#多线程编程&quot; class=&quot;headerlink&quot; title=&quot;多线程编程&quot;&gt;&lt;/a&gt;多线程编程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先搞清楚这些“概念”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;队列&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;多线程编程的基本规则&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多线程编程的应用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2&gt;&lt;center&gt;Blocks的介绍与使用&lt;/center&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;什么是Blocks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Blocks 也称为 &lt;code&gt;块&lt;/code&gt;， 块是对C语言的一种扩展。它并未作为标准ANSI C所定义的部分，而是由Apple公司添加到语言中的。块看起来更像是函数。你可以给块传递参数，正如给函数传递参数一样。块也具有返回值。与函数不同的是，&lt;strong&gt;块定义在函数或者方法内部&lt;/strong&gt;，并能防伪在函数或者方法范围内块之外的任何变量。一般来说，这些变量能够访问但是并不能够改变这些变量的值。有一个特殊的块修改器（由块前面含有两个下画线的字符组成）能够修改块内变量的值。&lt;br&gt;&lt;strong&gt;块能够作为参数传递给函数或者方法,块的其中一个优势在于能够让系统分配给其他处理器或应用的其他线程执行。&lt;/strong&gt;,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blocks的语法规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块的定义/实现：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以字符&lt;code&gt;^&lt;/code&gt;开头为标识，后面跟一个括号便是所需要的参数列表,后面再有一对中括号表示块的实现内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块的声明：&lt;code&gt;返回类型声明&lt;/code&gt; &lt;code&gt;(^变量名)&lt;/code&gt; &lt;code&gt;(参数列表)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数列表里类型声明之后局部变量可有可无，当你把块作为参数传递的时候，建议带上（带上的话使得代码更加整洁美观），不带也可以，就是你每次都要自己加局部变量，比较麻烦和费劲一点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为块设置别名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;typedef void (^Blo) (NSString *s1,UIColor *color);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blocks的应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;示例代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;ViewController.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef void (^Blo) (NSString *s1,UIColor *color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface ViewController ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.title = @&amp;quot;BlockDemo&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self block];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test:^(NSString *s1, UIColor *color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;在代码中看情况实现1%@&amp;quot;,s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test2:^(NSString *s1, UIColor *color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;在代码中看情况实现2%@&amp;quot;,s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Blo testBlockTy = ^(NSString *s1, UIColor *color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;利用别名声明变量并传个实现好的block: %@&amp;quot;,s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test:testBlockTy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test2:testBlockTy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void (^originBlock)(NSString *s, UIColor *a)= ^(NSString *s1, UIColor *color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;原生声明变量并传个实现好的block: %@&amp;quot;,s1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test:originBlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test2:originBlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self test2:^(NSString *x, UIColor *y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;在代码中看情况实现(自定义block中局部变量)%@&amp;quot;,x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.backgroundColor = y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)test:(Blo)block&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    block(@&amp;quot;str&amp;quot;,[UIColor redColor]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)test2:(void (^)(NSString *, UIColor *))block&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    block(@&amp;quot;fuck&amp;quot;,[UIColor blueColor]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)block&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //不带参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void (^printMessage) (void) = ^ (void)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;programing is fun.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //带一个参数，x可有可无&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void (^calculateTriangularNumber) (int x) = ^ (int n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int i,sum = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (i = 0; i &amp;lt; n; i ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum += i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;Triangular number %i is %i&amp;quot;,n,sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    calculateTriangularNumber(10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    calculateTriangularNumber(20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    calculateTriangularNumber(50);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //带2个参数返回它们和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int (^sumOf)(int,int) = ^ (int i, int j)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int sum = i + j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int result = sumOf(10,5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%i&amp;quot;,result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大家自己可以试一遍，test与test2的区别不只是block类型声明方式的区别，test的block声明带了参数（不带也可以），test2的block声明没带参数。调用的时候“xcode”自动补全的时候有很大区别哦！试一遍就知道我为什么在block声明的时候建议&lt;strong&gt;&lt;code&gt;当你把块作为参数传递的时候，建议带上局部变量&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;center&gt;多线程编程&lt;/center&gt;&lt;/h2&gt;



&lt;p&gt;关于多线程编程在硬件方面的体现：&lt;/p&gt;
&lt;p&gt;现在无论windows还是macOS，实现并发的都是“多任务系统”。首先，所有的应用程序以进程和线程方式运行，CPU的分配方式采用了抢占式，就是说操作系统可以强制吧CPU的资源分配给目前最需要的程序。 &lt;/p&gt;
&lt;p&gt;并发（Concurrentcy）与并行（Parallelism）。多核或多个CPU才可能发生并行，如果是单核，单CPU只能发生并发行为。&lt;/p&gt;
&lt;p&gt;如果有人认为单核单CPU的并发就是同时执行很多任务，那么这个是错觉。并行是针对时刻的，同一个时刻同时处理。并行是针对任务，事件的，2件事同时完成那就是并发。如果是并行，那就一定是并发。反之，则不一定。&lt;/p&gt;
&lt;p&gt;在 iOS 中其实目前有 4 套多线程方案，他们分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pthreads&lt;/li&gt;
&lt;li&gt;NSThread&lt;/li&gt;
&lt;li&gt;GCD&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSOperation &amp;amp; NSOperationQueue&lt;/p&gt;
&lt;p&gt;这里只讲GCD&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;先搞清楚这些“概念”&lt;/strong&gt;&lt;br&gt;基本概念的理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;线程&lt;/p&gt;
&lt;p&gt; 程序中独立运行的代码段。（例如：接收QQ消息的代码）&lt;br&gt;一个进程是由一或多个线程组成。进程只负责资源的调度和分配，线程才是程序真正的执行单元，负责代码的执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进程&lt;/p&gt;
&lt;p&gt;一个正在运行的程序可以看做一个进程。（例如：正在运行的QQ就是一个进程），进程拥有独立运行所需的全部资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务&lt;/p&gt;
&lt;p&gt; 即操作，你想要干什么，说白了就是一段代码，在 GCD 中就是一个 Block，所以添加任务十分方便。任务有两种执行方式： 同步执行 和 异步执行，他们之间的区别是 是否会创建新的线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;队列&lt;/p&gt;
&lt;p&gt;用于存放任务。一共有两种队列， 串行队列 和 并行队列。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多线程编程的基本规则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GCD的基本思想就是把&lt;code&gt;任务&lt;/code&gt;加到&lt;code&gt;队列&lt;/code&gt;中&lt;code&gt;同步&lt;/code&gt;(&lt;code&gt;异步&lt;/code&gt;)执行&lt;/p&gt;
&lt;p&gt;串行队列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1 获取主队列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2 自己创建串行队列&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_queue_create(&amp;quot;demoQueue&amp;quot;, DISPATCH_QUEUE_SERIAL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_queue_create(&amp;quot;demoQueue&amp;quot;, NULL);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并行队列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1 获取全局并发队列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2 自己创建并发队列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_queue_create(&amp;quot;demoQueue&amp;quot;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;同步执行&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;异步执行&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;串行队列&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;当前线程，一个一个执行&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;其他线程，一个一个执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;并行队列&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;当前线程，一个一个执行&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;开很多线程，一起执行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;  如果是 同步（sync） 操作，它会阻塞当前线程并等待 Block 中的任务执行完毕，然后当前线程才会继续往下运行。&lt;/p&gt;
&lt;p&gt; 如果是 异步（async）操作，当前线程会直接往下执行，它不会阻塞当前线程。&lt;/p&gt;
&lt;p&gt; 一但在串行队列中同步执行任务就会产生死锁现象 - 同步执行时，当前queue阻塞，新的任务加到当前queue中，等待当前queue前面的任务执行完毕，然后它就会永远在那里等待，因为当前queue已经阻塞了。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;多线程编程的应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 1.一些网络请求，耗时的操作你可以先异步执行并行队列，然后回调（请求有回应）的时候再到主线程更新UI&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(dispatch_get_global_queue(0, 0), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           [g_sdkObject commonSend:kCommonSendUrl funName:@&amp;quot;getDayOfMilk&amp;quot; param:@&amp;quot;&amp;quot; data:dic enc:0 success:^(NSInteger retCode, NSData *retData) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               dispatch_async(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   NSDictionary *dic = [NSDictionary dictionaryWithXMLData:retData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   NSDictionary *resultDic = dic[@&amp;quot;result&amp;quot;][@&amp;quot;items&amp;quot;][@&amp;quot;item&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   if ([resultDic isKindOfClass:[NSDictionary class]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       g_currentBaby.milkDrinked = [resultDic[@&amp;quot;milkPowder&amp;quot;]integerValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   NSLog(@&amp;quot;%@&amp;quot;,dic);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   block(retCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; failure:^(NSInteger errCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 2.当遇到需要执行多个线程并发执行，然后等多个线程都结束之后，再汇总执行结果时可以用group queue&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; dispatch_queue_t conCurrentGlobalQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t mainQueue = dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_t groupQueue = dispatch_group_create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;current task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(groupQueue, conCurrentGlobalQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;并行任务1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(groupQueue, conCurrentGlobalQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;并行任务2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_notify(groupQueue, mainQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;groupQueue中的任务 都执行完成,回到主线程更新UI&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;next task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 3.在当前线程阻塞的同步等待dispatch_group_wait&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; dispatch_group_t groupQueue = dispatch_group_create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_time_t delayTime = dispatch_time(DISPATCH_TIME_NOW, 10 * NSEC_PER_SEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t conCurrentGlobalQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;current task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(groupQueue, conCurrentGlobalQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   long isExecuteOver = dispatch_group_wait(groupQueue, delayTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if (isExecuteOver) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSLog(@&amp;quot;wait over&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSLog(@&amp;quot;not over&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;并行任务1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(groupQueue, conCurrentGlobalQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;并行任务2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; current task

并行任务2

wait over

 并行任务1
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;dispatch_after延时添加到队列&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_time_t delayTime3 = dispatch_time(DISPATCH_TIME_NOW, 3*NSEC_PER_SEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_time_t delayTime2 = dispatch_time(DISPATCH_TIME_NOW, 2*NSEC_PER_SEC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t mainQueue = dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;current task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_after(delayTime3, mainQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSLog(@&amp;quot;3秒之后添加到队列&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_after(delayTime2, mainQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;2秒之后添加到队列&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;next task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5.dispatch_apply在给定的队列上多次执行某一任务，在主线程直接调用会阻塞主线程去执行block中的任务,它的本质就是同步执行。所以会阻塞队列&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t globalQueue = dispatch_get_global_queue(0, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;current task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(globalQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t applyQueue = dispatch_get_global_queue(0, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//第一个参数，3--block执行的次数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//第二个参数，applyQueue--block任务提交到的队列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//第三个参数，block--需要重复执行的任务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_apply(3, applyQueue, ^(size_t index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&amp;quot;current index %@&amp;quot;,@(index));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      sleep(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;dispatch_apply 执行完成&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t mainQueue = dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(mainQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&amp;quot;回到主线程更新UI&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;next task&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;6.dispatch_once保证在app运行期间，block中的代码只执行一次 - 用于单例&lt;/p&gt;
&lt;p&gt;7.dispatch_barrier_async 栅栏的作用&lt;/p&gt;
&lt;p&gt;功能：是在并行队列中，等待在dispatch_barrier_async之前加入的队列全部执行完成之后（这些任务是并发执行的）再执行dispatch_barrier_async中的任务，dispatch_barrier_async中的任务执行完成之后，再去执行在dispatch_barrier_async之后加入到队列中的任务（这些任务是并发执行的）。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t conCurrentQueue = dispatch_queue_create(&amp;quot;com.dullgrass.conCurrentQueue&amp;quot;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(conCurrentQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSLog(@&amp;quot;dispatch 1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(conCurrentQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;dispatch 2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_barrier_async(conCurrentQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;dispatch barrier&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(conCurrentQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;dispatch 3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(conCurrentQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;dispatch 4&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出是1，2，3，4&lt;/p&gt;
&lt;p&gt;有些我没有贴上输出，大家自己去试试。&lt;/p&gt;
&lt;p&gt;多线程编程中第三部分大量的内容来自&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/ae786a4cf3b1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在iOS开发中，当涉及网络操作及复杂任务的时候，我们就要使用多线程编程，而多线程编程中用到大量的block，本文就来讲讲&lt;strong&gt;Blocks&lt;/strong&gt;与&lt;strong&gt;多线程编程&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;Blocks的介绍与使用&quot;&gt;&lt;a href=&quot;#Blocks的介绍与使用&quot; class=&quot;headerlink&quot; title=&quot;Blocks的介绍与使用&quot;&gt;&lt;/a&gt;Blocks的介绍与使用&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;什么是Blocks&lt;/li&gt;
&lt;li&gt;Blocks的语法规则&lt;/li&gt;
&lt;li&gt;Blocks的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;多线程编程&quot;&gt;&lt;a href=&quot;#多线程编程&quot; class=&quot;headerlink&quot; title=&quot;多线程编程&quot;&gt;&lt;/a&gt;多线程编程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;先搞清楚这些“概念”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;任务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;队列&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;多线程编程的基本规则&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多线程编程的应用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>随处可见的UITableView</title>
    <link href="http://yoursite.com/2016/07/06/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/"/>
    <id>http://yoursite.com/2016/07/06/随处可见的UITableView/</id>
    <published>2016-07-06T11:31:27.000Z</published>
    <updated>2016-07-06T11:42:03.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS中处处可以见到UITableView的使用。&lt;br&gt;系统里UITableView的使用：&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/IMG_1913.jpg&quot; alt=&quot;设置界面&quot;&gt;&lt;br&gt;微信里UITableView的使用：&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/THVE5337.jpg&quot; alt=&quot;微信&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/ITSN0039.jpg&quot; alt=&quot;微信朋友圈&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableView_Class/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UITableView官方文档&lt;/a&gt;&lt;br&gt;UITableView的用途以及如何使用，使用的注意点都可以通过阅读官方文档解读出来&lt;br&gt;你可以过一遍官方文档来了解下UITableView&lt;br&gt;我总结如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.一个UITableView的实例（下文都用_tableView来表示）用来展示列表信息&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;_tableView继承自UIScorllerView,由许多的UITableViewCell的实例对象组成&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;3.cell有很多不同类型,不同cell类型的结构:&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;_tableView可以有0或多个sections，每个sections有它自己的rows，section header和section footer&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;5 _tableView有2个类型： UITableViewStylePlain， UITableViewStyleGrouped&lt;/li&gt;
&lt;li&gt;6 _tableView必须有UITableViewDataSource的代理来展示数据&lt;/li&gt;
&lt;li&gt;7 _tableView有重用机制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文我会讲解UITableView的基本使用，进阶的一些用法，tableView重用机制的解释，&lt;br&gt;接下来的目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一：UITableView的基本使用 - 展示 - 增加 - 删除 - 移动&lt;/li&gt;
&lt;li&gt;二：自定义cell样式&lt;/li&gt;
&lt;li&gt;三：带搜索框的UITableView&lt;/li&gt;
&lt;li&gt;四：UItableView的内存管理和重用机制&lt;/li&gt;
&lt;li&gt;五：深度定制UItableView&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;一：UITableView-的基本使用&quot;&gt;&lt;a href=&quot;#一：UITableView-的基本使用&quot; class=&quot;headerlink&quot; title=&quot;一：UITableView 的基本使用&quot;&gt;&lt;/a&gt;一：UITableView 的基本使用&lt;/h4&gt;&lt;p&gt;你可以使用拖控件的方式或者代码的方式创建一个实例对象，我的是代码创建的 -&amp;gt; 创建或者查询数据 -&amp;gt; 实现UITableViewDataSource的代理方法来正确的展示数据&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)configTableView&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!_tableView) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _tableView = [[UITableView alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _tableView.frame = self.view.frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _tableView.dataSource = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _tableView.delegate = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self.view addSubview:_tableView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)querryData&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _records = [[NSMutableArray alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (NSInteger i = 0; i &amp;lt; 100; i ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSString *iS = [NSString stringWithFormat:@&amp;quot;%ld&amp;quot;,(long)i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_records addObject:iS];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实现代理UITableViewDataSource&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#pragma mark - UITableViewDataSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger )numberOfSectionsInTableView:(UITableView *)tableView&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return _records.count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static NSString * const kCellIdentifier = @&amp;quot;CellIdentifierBaseUse&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:kCellIdentifier];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (!cell) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:kCellIdentifier];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (indexPath.row &amp;lt; _records.count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSString *string = _records[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cell.textLabel.text = string;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样你的信息就展示出来了，如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/IMG_1939.jpg&quot; alt=&quot;基本使用效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;在iOS中，在tableView里的增加，删除，移动cell，系统也帮我们高度集成了，我们需要知道如何使用：&lt;/p&gt;
&lt;p&gt;1.是否可编辑，默认YES&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.当点击响应编辑按钮响应的方法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.返回编辑按钮的样式，有删除、增加、none，默认删除&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.是否可移动 默认YES&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.移动单元格响应的方法&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//响应编辑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch (editingStyle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case UITableViewCellEditingStyleDelete:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSString *object = _records[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [_records removeObject:object];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationTop];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSLog(@&amp;quot;删除&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case UITableViewCellEditingStyleInsert:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSString *string = [NSString stringWithFormat:@&amp;quot;%ld&amp;quot;,(long)(arc4random() + 1000)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [_records insertObject:string atIndex:indexPath.row + 1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSIndexPath *insertIndexPath = [NSIndexPath indexPathForRow:indexPath.row + 1 inSection:indexPath.section];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [tableView insertRowsAtIndexPaths:@[insertIndexPath] withRowAnimation:UITableViewRowAnimationBottom];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//响应移动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_records exchangeObjectAtIndex:sourceIndexPath.row withObjectAtIndex:destinationIndexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#pragma mark - UITableViewDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSString *object = _records[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if([object integerValue] % 2 == 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return UITableViewCellEditingStyleInsert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return UITableViewCellEditingStyleDelete;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)edit&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (_tableView.editing) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_tableView setEditing:NO animated:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [_tableView setEditing:YES animated:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当增加一个cell的时候，显示屏新显示的是新增的cell，删除一个cell的时候，显示屏新显示的是之前在最低端的下一行。所以只会调用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一次来显示要新显示的cell&lt;/p&gt;
&lt;p&gt;其余的变动，如移动并不会调用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来刷新数据，UITableView只是变更下他们的位置而已。&lt;/p&gt;
&lt;h4 id=&quot;二：自定义-tableView的样式&quot;&gt;&lt;a href=&quot;#二：自定义-tableView的样式&quot; class=&quot;headerlink&quot; title=&quot;二：自定义_tableView的样式&quot;&gt;&lt;/a&gt;二：自定义_tableView的样式&lt;/h4&gt;&lt;p&gt;自定义cell:&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/1A629274-6F27-403F-A187-6844E118F43C.png&quot; alt=&quot;cell&quot;&gt;&lt;/p&gt;
&lt;p&gt;为当前的_tableView注册自定义cell，指定重用标识&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; //注册自定义cell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[_tableView registerNib:[UINib nibWithNibName:@&amp;quot;AMissionCell&amp;quot; bundle:nil] forCellReuseIdentifier:@&amp;quot;AMissionCell&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在返回cell的时候根据数据适配当前cell的UI&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AMissionCell *cell = [tableView dequeueReusableCellWithIdentifier:@&amp;quot;AMissionCell&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (!cell) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //这是不可能出现的错误，去看看xib文件的identifier有没有指定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (indexPath.row &amp;lt; _records.count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AMission *object = _records[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell configUIWithObject:object withIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cell.selectionStyle = UITableViewCellSelectionStyleNone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cell.delegate = self;	//代理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return cell;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里注意下：每个cell都是有一个数据实例来显示，应该把具体的实现细节封装在内部，而不该在暴露在外面.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//在`.h`中声明方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface AMissionCell : UITableViewCell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (assign, nonatomic) id &amp;lt;AMissionCellDelegate&amp;gt; delegate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)configUIWithObject:(AMission *)mission withIndexPath:(NSIndexPath *)indexPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//.m中的实现&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)configUIWithObject:(AMission *)mission withIndexPath:(NSIndexPath *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mission.isCompleted) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _checkImageView.image = [UIImage imageNamed:@&amp;quot;cell_check_yes&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _checkImageView.image = [UIImage imageNamed:@&amp;quot;cell_check_no&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _label.text = mission.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mission.isStar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _starImageView.image = [UIImage imageNamed:@&amp;quot;cell_star_no&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _checkButton.tag = indexPath.row;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;实现cell的代理，大部分事件的处理在ViewControl中，你可以通过代理来把方法响应到ViewControl中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代理定义&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@protocol AMissionCellDelegate &amp;lt;NSObject&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)checkButtonTouched:(UIButton *)button;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)starButtonTouched:(UIButton *)button;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置代理变量&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@property (assign, nonatomic) id &amp;lt;AMissionCellDelegate&amp;gt; delegate;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;声明代理&lt;br&gt;&lt;code&gt;@interface CustomTableViewVC ()&amp;lt;AMissionCellDelegate&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置代理&lt;br&gt;&lt;code&gt;cell.delegate = self;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代理方法的实现&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; #pragma mark - AMissionCellDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)checkButtonTouched:(UIButton *)button&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (button.tag &amp;lt; _records.count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AMission *misson = _records[button.tag];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;改变了%@的状态&amp;quot;,misson.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)starButtonTouched:(UIButton *)button&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //自己实现，和check那边一样的道理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 实现效果：&lt;br&gt; &lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/IMG_1940.jpg&quot; alt=&quot;自定义cell&quot;&gt;&lt;br&gt; 其他具体实现的细节，在文末有个链接，你可以下载demo细看&lt;/p&gt;
&lt;h4 id=&quot;三：带搜索框的UITableView&quot;&gt;&lt;a href=&quot;#三：带搜索框的UITableView&quot; class=&quot;headerlink&quot; title=&quot;三：带搜索框的UITableView&quot;&gt;&lt;/a&gt;三：带搜索框的UITableView&lt;/h4&gt;&lt;p&gt;1.添加UISearchBar对象&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; _searchBar = [[UISearchBar alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_searchBar.frame = CGRectMake(0, 66, [[UIScreen mainScreen]bounds].size.width, 66);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_searchBar.delegate = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_tableView.tableHeaderView = _searchBar;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.实现代理&lt;br&gt;&lt;code&gt;UISearchBarDelegate&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self changeArrayWithText:searchText];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.实现搜索方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)changeArrayWithText:(NSString *)text&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //获取初始数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSMutableArray *tempArray = [self querryData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //筛选&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSArray *resultArray = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (text.length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSPredicate *predicate = [NSPredicate predicateWithFormat:@&amp;quot;SELF contains[c] %@&amp;quot;,text];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resultArray = [tempArray filteredArrayUsingPredicate:predicate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resultArray = tempArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //赋值与重新加载数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _records = [[NSMutableArray alloc]initWithArray:resultArray];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_tableView reloadData];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;UISearchBar&lt;/code&gt;还可以以有很多定制化，大家自己试试，我这里不展开了。这里注意我的UISearchBar是赋值给tableView的headerView，不是添加上去的.&lt;code&gt;_tableView.tableHeaderView = _searchBar;&lt;/code&gt;&lt;br&gt;搜索框比较简单，关键在于NSPredicate的用法，重新筛选数据这步骤&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/88be28860cde&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSPredicate的用法&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;四-UItableView的内存管理和重用机制&quot;&gt;&lt;a href=&quot;#四-UItableView的内存管理和重用机制&quot; class=&quot;headerlink&quot; title=&quot;四:UItableView的内存管理和重用机制&quot;&gt;&lt;/a&gt;四:UItableView的内存管理和重用机制&lt;/h4&gt;&lt;p&gt;在UITableViewDataSource的代理方法中，返回cell那里,table有一个方法：&lt;code&gt;dequeueReusableCellWithIdentifier:&lt;/code&gt;，这就是tableView的重用机制，苹果帮助我们管理cell的内存（滑动的时候进栈出栈），一般情况下我们不需要关系这个，但是有些时候，在特别是你一个tableView中有cell的类型、布局有时候会不一样，就很容易出错。所以了解下tableView的重用机制是很有必要的。&lt;/p&gt;
&lt;p&gt;上面&lt;code&gt;第一节的tableView的基本使用&lt;/code&gt;里，我创建了0-99的100字符的显示，以这个为例，我们先把它cell的内存打印出来看看&lt;code&gt;NSLog(@&amp;quot;%@:%@&amp;quot;,string,cell);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我的操作：先往上滑动5格，再往上滑动10格，往下滑动7格&lt;/p&gt;
&lt;p&gt;内存打印情况：&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/cache.png&quot; alt=&quot;内存情况&quot;&gt;&lt;/p&gt;
&lt;p&gt;我把相同的内存地址用颜色标注好了，一共有17个不同的cell内存，以后都是重用这些cell，&lt;/p&gt;
&lt;p&gt;cell的重用机制规则如下，按照这个规则就是这样的内存打印情况（用自己脑瓜按照这个规则走一遍，刚好是这样的内存打印情况）&lt;br&gt;cell重用规则&lt;/p&gt;
&lt;p&gt;今天我们来分析一下UITableViewCell的重用机制.&lt;br&gt;首先,我们要明白我们为什么需要使用这种机制,其次,这种机制的原理是什么.&lt;br&gt;我们先举个例子来说明.一个UITableView中有许多需要显示的cell,但是我们不可能每个都会浏览到,那么如果我们把这些数据全部都加载进去,是不是造成了内存的负担呢.&lt;br&gt;我们所能显示的区域通常只有一个屏幕的大小,那么那些屏幕之外的信息是不需要一次性全都加载完的,只有当我们滑动屏幕需要浏览的时候,我们才需要它加载进来.因此,就有了我们要介绍的这部分内容,UITabelViewCell的重用机制.&lt;br&gt;重用机制实现了数据和显示的分离,并不为每个数据创建一个UITableViewCell,我们只创建屏幕可显示的最大的cell个数+1,然后去循环重复使用这些cell,既节省空间,又达到我们需要显示的效果.&lt;br&gt;这种机制下系统默认有一个可变数组NSMutableArray&lt;em&gt;  visiableCells,用来保存当前显示的cell.一个可变字典NSMutableDictnery&lt;/em&gt; reusableTableCells,用来保存可重复利用的cell.(之所以用字典是因为可重用的cell有不止一种样式,我们需要根据它的reuseIdentifier,也就是所谓的重用标示符来查找是否有可重用的该样式的cell).&lt;br&gt;系统第一次执行- (UITableViewCell &lt;em&gt;)tableView:(UITableView &lt;/em&gt;)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath这个方法的时候, reusableTableCells为空,[tableView dequeueReusableCellWithIdentifier:identifier]的返回值为nil,我们需要通过[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier: identifier]方式来创建.&lt;br&gt;当我们的数据过多,整个屏幕的cell显示不完全时,这个方法的执行情况是 :&lt;/p&gt;
&lt;p&gt;(1) 先执行[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier: identifier]创建整个屏幕能显示的cell数+1的cell(当我们拖动UITableView的时候,第一个cell没有移出屏幕,最下面的cell就已经存在),并指定相同或者不同的标示符identifier.把创建出的屏幕能显示的cell全部都加入到visiableCells数组中(最后一个创建的先不加入数组)，reusableTableCells为空.&lt;/p&gt;
&lt;p&gt;(2)当我们拖动屏幕时,顶端的cell移出屏幕并加入到reusableTableCells字典中,键为identifier ,并把之前已经创建的但是没有加入到visiableCells的cell加入到visiableCells数组中.&lt;/p&gt;
&lt;p&gt;(3)当我们接着拖动的时候,因为reusableTableCells中已经有值，所以，当需要显示新的cell，cellForRowAtIndexPath再次被调用，执行[tableView dequeueReusableCellWithIdentifier: identifier]，返回一个标示符为identifier的cell。该cell移出reusableTableCells之后加入到visiableCells；顶端的cell移出visiableCells并加入到reusableTableCells.如果visiableCells数组中没有找到identifier类型的cell,则再次重新alloc一个.&lt;/p&gt;
&lt;p&gt;讲述规则的文字我是从网上摘录下来的，不是我自己写的。摘自：／李xiao屁的忧伤（简书作者）&lt;br&gt;&lt;a href=&quot;：http://www.jianshu.com/p/b2bba60c0976&quot;&gt;重用规则&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;深度定制UItableView&quot;&gt;&lt;a href=&quot;#深度定制UItableView&quot; class=&quot;headerlink&quot; title=&quot;深度定制UItableView&quot;&gt;&lt;/a&gt;深度定制UItableView&lt;/h4&gt;&lt;p&gt;你看，有时候想要实现这样的效果：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A4%84%E5%8F%AF%E8%A7%81%E7%9A%84UITableView/IMG_1936.jpg&quot; alt=&quot;邮箱&quot;&gt;.你就必须实现cell的深度定制，&lt;br&gt;&lt;a href=&quot;https://github.com/nixzhu/dev-blog/blob/master/2014-04-26-make-swipeable-table-view-cell-actions-without-going-nuts-scroll-views.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教程链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想要实现这样的效果，其实还有个另外更简单的方法，用别人造好的轮子就行了&lt;br&gt;&lt;a href=&quot;https://github.com/CEWendel/SWTableViewCell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无敌风火轮&lt;/a&gt;&lt;br&gt;你也找找其他效果的，github上很多的。&lt;/p&gt;
&lt;h5 id=&quot;一些tips&quot;&gt;&lt;a href=&quot;#一些tips&quot; class=&quot;headerlink&quot; title=&quot;一些tips&quot;&gt;&lt;/a&gt;一些tips&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;(void)tableView:(UITableView &lt;em&gt;)tableView willDisplayCell:&lt;br&gt;(UITableViewCell &lt;/em&gt;)cell forRowAtIndexPath:(NSIndexPath &lt;em&gt;)indexPath;这个方法的调用在 - (UITableViewCell &lt;/em&gt;)tableView:(UITableView &lt;em&gt;)tableView cellForRowAtIndexPath:(NSIndexPath &lt;/em&gt;)indexPath;之后&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;想要满屏分割线的tableView&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if ([tableView respondsToSelector:@selector(setSeparatorInset:)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView setSeparatorInset:UIEdgeInsetsZero];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([tableView respondsToSelector:@selector(setLayoutMargins:)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView setLayoutMargins:UIEdgeInsetsZero];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([cell respondsToSelector:@selector(setLayoutMargins:)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell setLayoutMargins:UIEdgeInsetsZero];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;消除TableView的上面空白部分：self代表UIViewController对象&lt;br&gt;self.automaticallyAdjustsScrollViewInsets = NO;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后：&lt;a href=&quot;https://github.com/codeTalkCC/Blog_CodeTalkCC_Code/tree/master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo链接&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS中处处可以见到UITableView的使用。&lt;br&gt;系统里UITableView的使用：&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/master/%E9%9A%8F%E5%A
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git命令整理</title>
    <link href="http://yoursite.com/2016/06/08/Git%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2016/06/08/Git命令整理/</id>
    <published>2016-06-08T05:47:41.000Z</published>
    <updated>2016-06-21T06:54:11.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Git初始化&quot;&gt;&lt;a href=&quot;#Git初始化&quot; class=&quot;headerlink&quot; title=&quot;Git初始化&quot;&gt;&lt;/a&gt;Git初始化&lt;/h2&gt;&lt;p&gt;安装 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo yum install git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;更新&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone git://git.kernel.org/pub/scm/git/git.git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;帮助&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git help &lt;code&gt;add&lt;/code&gt;&lt;br&gt;git &lt;code&gt;add&lt;/code&gt; –help&lt;br&gt;man git-&lt;code&gt;add&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;add&lt;/code&gt;可以换成其他命令如:&lt;code&gt;merge&lt;/code&gt;,&lt;code&gt;commit&lt;/code&gt;等&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;更新改动到本地仓库&quot;&gt;&lt;a href=&quot;#更新改动到本地仓库&quot; class=&quot;headerlink&quot; title=&quot;更新改动到本地仓库&quot;&gt;&lt;/a&gt;更新改动到本地仓库&lt;/h2&gt;&lt;p&gt;在现有目录中初始化仓库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git init&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看本地的被跟踪文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git ls-files&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看目前仓库当前分支的状态&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git status&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;添加需要被跟踪的文件someFile.xx&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add someFile.xx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;添加需要被跟踪的目录someFilePath&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add someFileePath&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;添加本目录下所有需要被跟踪的文件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上的3个命令如果文件已被跟踪则命令为添加改变到暂存区&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;code&gt;git add&lt;/code&gt;是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在你想切换分支，但是你还不想提交你正在进行中的工作；所以你储藏这些变更。为了往堆栈推送一个新的储藏，只要运行 git stash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git stash&lt;br&gt;git stash list  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应用储藏表示回到之前的修改的状态，工作区上的文件复原，但是都是未暂存状态，如果之前的文件有暂存的状态，那么想恢复暂存状态-看下一条  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git stash apply&lt;br&gt;git stash apply &lt;code&gt;stashName&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对文件的变更被重新应用，但是被暂存的文件没有重新被暂存。想那样的话，你必须在运行 git stash apply 命令时带上一个 –index 的选项来告诉命令重新应用被暂存的变更 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git stash apply –index &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;丢弃stash &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git stash drop &lt;code&gt;stash@{0}&lt;/code&gt;&lt;br&gt;git stash pop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;把暂存区的改变提交到仓库&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这会显示一个可以输入大段文字的窗口，让你可以输入注释与提交说明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit -m”提交说明,注释”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;跳过使用暂存区域：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit -a -m”提交说明,注释”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。Git 提供了一个跳过使用暂存区域的方式，只要在提交的时候，给 &lt;code&gt;git commit&lt;/code&gt;加上 &lt;code&gt;-a&lt;/code&gt; 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 &lt;code&gt;git add&lt;/code&gt; 步骤&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;移除对某些文件的跟踪&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;文件/目录&lt;/code&gt;未被跟踪前配置好&lt;code&gt;.gitignore&lt;/code&gt;文件,如果之前已经跟踪过 ,则需要先移除这个&lt;code&gt;文件/目录&lt;/code&gt;的跟踪,然后再配置&lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除文件的跟踪&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git rm –cached &lt;code&gt;someFile.xx&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;移除目录的跟踪&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git rm -r –cached &lt;code&gt;/Users/Ben/Documents/GoGitService/smartSleep/SmartSleep.xcworkspace/xcuserdata&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-r表示allow recursive removal 递归移除文件目录下所有文件的跟踪&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;strong&gt;这2个命令移除的跟踪只针对当前的分支有效，如果你有另外一个分支，那么另外的分支还是会跟踪这些文件，你需要在另外的分支中执行相同的命令移除跟踪&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如何配置&lt;code&gt;.gitignore&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;文件 .gitignore 的格式规范如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。&lt;/li&gt;
&lt;li&gt;可以使用标准的 glob 模式匹配。&lt;/li&gt;
&lt;li&gt;匹配模式最后跟反斜杠（/）说明要忽略的是目录。&lt;/li&gt;
&lt;li&gt;要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技巧：&lt;br&gt;目录是从仓库的根目录开始，去除前面的&lt;em&gt;本机到根目录&lt;/em&gt;的路径，在移除跟踪之后用&lt;code&gt;git status&lt;/code&gt; 查看，有个目录的状态为修改状态，粘贴这个目录到&lt;code&gt;.gitignore&lt;/code&gt;文件就好了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;本地关于取消修改的操作&quot;&gt;&lt;a href=&quot;#本地关于取消修改的操作&quot; class=&quot;headerlink&quot; title=&quot;本地关于取消修改的操作&quot;&gt;&lt;/a&gt;本地关于取消修改的操作&lt;/h2&gt;&lt;p&gt;修改最后一次提交&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit –amend&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;取消已经暂存的文件&lt;code&gt;file.xx&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git reset HEAD &lt;code&gt;file.xx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;取消对文件的修改&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout – &lt;code&gt;file.xx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看版本历史&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;版本回退到上一个版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git reset –hard HEAD^  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回退到某个特定的版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git reset –hard 3b8794&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果想撤销回退那么&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git reflog&lt;br&gt;这命令会显示你的每一步操作,找到对应的MD5，用上一个命令返回就好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;本地关于分支的操作&quot;&gt;&lt;a href=&quot;#本地关于分支的操作&quot; class=&quot;headerlink&quot; title=&quot;本地关于分支的操作&quot;&gt;&lt;/a&gt;本地关于分支的操作&lt;/h2&gt;&lt;p&gt;查看分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch &lt;code&gt;theBrach&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;删除分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch -d &lt;code&gt;theBranch&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;切换分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;合并分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git merge &lt;code&gt;theBranch&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建分支并切换&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout -b &lt;code&gt;aBranch&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;与远程仓库交互&quot;&gt;&lt;a href=&quot;#与远程仓库交互&quot; class=&quot;headerlink&quot; title=&quot;与远程仓库交互&quot;&gt;&lt;/a&gt;与远程仓库交互&lt;/h2&gt;&lt;p&gt;查看远程仓库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git remote&lt;br&gt;git remote -v&lt;br&gt;git remote show &lt;code&gt;[remote-name]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从远程仓库克隆&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone \&lt;url&gt; \&lt;customname or=&quot;&quot; nil=&quot;&quot;&gt;&lt;br&gt;git clone &lt;a href=&quot;https://github.com/libgit2/libgit2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/libgit2/libgit2&lt;/a&gt; selfStocke&lt;/customname&gt;&lt;/url&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;添加远程仓库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git remote add &lt;code&gt;[remote-name]&lt;/code&gt; &lt;code&gt;[url]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;[remote-name]&lt;/code&gt; 用来指代 &lt;code&gt;[url]&lt;/code&gt;,是远程仓库的名称&lt;/p&gt;
&lt;p&gt;本地也有一个远程仓库，可以用&lt;code&gt;git branch -a&lt;/code&gt;查看，但是我们是无法更改的！&lt;/p&gt;
&lt;p&gt;如果远程没有这个分支，添加远程分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git push &lt;code&gt;远程仓库名&lt;/code&gt; &lt;code&gt;分支名&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里其实走了一点捷径。Git 自动把 serverfix 分支名扩展为 refs/heads/serverfix:refs/heads/serverfix，意为“取出我在本地的 serverfix 分支，推送到远程仓库的 serverfix 分支中去”。我们将在第九章进一步介绍 refs/heads/ 部分的细节，不过一般使用的时候都可以省略它。也可以运行 git push origin serverfix:serverfix 来实现相同的效果，它的意思是“上传我本地的 serverfix 分支到远程仓库中去，仍旧称它为 serverfix 分支”。通过此语法，你可以把本地分支推送到某个命名不同的远程分支：若想把远程分支叫作 awesomebranch，可以用 git push origin serverfix:awesomebranch 来推送数据。&lt;/p&gt;
&lt;p&gt;如果远程已经有这个分支，删除远程分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git push &lt;code&gt;远程仓库名&lt;/code&gt; :&lt;code&gt;分支名&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;咚！服务器上的分支没了。你最好特别留心这一页，因为你一定会用到那个命令，而且你很可能会忘掉它的语法。有种方便记忆这条命令的方法：记住我们不久前见过的 git push [远程名] [本地分支]:[远程分支] 语法，如果省略 [本地分支]，那就等于是在说“在这里提取空白然后把它变成[远程分支]”&lt;/p&gt;
&lt;p&gt;拉取远程的更新到本地的“远程仓库”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git fetch &lt;code&gt;[remote-name]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此命令会到远程仓库中拉取所有你本地仓库中还没有的数据。运行完成后，你就可以在本地访问该远程仓库中的所有分支，将其中某个分支合并到本地，或者只是取出某个分支，一探究竟。&lt;strong&gt;fetch 命令只是将远端的数据拉到本地仓库，并不自动合并到当前工作分支，只有当你确实准备好了，才能手工合并&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;拉取数据并自动合并&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git pull &lt;code&gt;[remote-name]&lt;/code&gt; &lt;code&gt;[branch-name]&lt;/code&gt;&lt;br&gt;git pull&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果设置了某个分支用于跟踪某个远端仓库的分支，可以使用 git pull 命令自动抓取数据下来，然后将远端分支自动合并到本地仓库中当前分支。在日常工作中我们经常这么用，既快且好。实际上，默认情况下 git clone 命令本质上就是自动创建了本地的 master 分支用于跟踪远程仓库中的 master 分支（假设远程仓库确实有 master 分支）。所以一般我们运行 git pull，目的都是要从原始克隆的远端仓库中抓取数据后，合并到工作目录中的当前分支。&lt;/p&gt;
&lt;p&gt;设置本地分支跟踪远程分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout -b &lt;code&gt;[本地分支名]&lt;/code&gt; &lt;code&gt;[远程仓库名]&lt;/code&gt;/&lt;code&gt;[远程分支名]&lt;/code&gt;&lt;br&gt;git checkout -b sf origin/serverfix&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Branch sf set up to track remote branch serverfix from origin.&lt;br&gt;Switched to a new branch ‘sf’&lt;br&gt;这命令的意思应该是新建本地分支并跟踪远程分支&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout –track origin/serverfix&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Branch serverfix set up to track remote branch serverfix from origin.&lt;br&gt;Switched to a new branch ‘serverfix’&lt;/p&gt;
&lt;p&gt;设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支，你可以在任意时间使用 -u 或 –set-upstream-to 选项运行 git branch 来显式地设置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch -u origin/serverfix&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Branch serverfix set up to track remote branch serverfix from origin.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch –set-upstream master origin/master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个命令也可以&lt;br&gt;&lt;strong&gt;推送数据到远程仓库&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git push &lt;code&gt;[remote-name]&lt;/code&gt; &lt;code&gt;[local_branch-name]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;远程仓库的删除和重命名&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git remote rm &lt;code&gt;[remote-name]&lt;/code&gt;&lt;br&gt;git remote rename &lt;code&gt;[old-name]&lt;/code&gt; &lt;code&gt;[new-name]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分支的衍合&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout &lt;code&gt;branchA&lt;/code&gt;&lt;br&gt;git rebase &lt;code&gt;branchB&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在branchB上把branchA的改动补丁合并，&lt;br&gt;它的原理是回到两个分支最近的共同祖先，根据当前分支（也就是要进行衍合的分支 branchA）后续的历次提交对象（这里只有一个 C3），生成一系列文件补丁，然后以基底分支（也就是主干分支 branchB）最后一个提交对象（C4）为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象（C3’），从而改写 branchA 的提交历史，&lt;strong&gt;使它成为 master 分支的直接下游&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意：对于提交历史记录，rebase的作用只是把branchA的记录合并到branchB上去了，并不会让branchA的提交记录消失掉&lt;/p&gt;
&lt;p&gt;origin&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git初始化&quot;&gt;&lt;a href=&quot;#Git初始化&quot; class=&quot;headerlink&quot; title=&quot;Git初始化&quot;&gt;&lt;/a&gt;Git初始化&lt;/h2&gt;&lt;p&gt;安装 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo yum install git&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS中的图形绘制</title>
    <link href="http://yoursite.com/2016/05/06/iOS%E4%B8%AD%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/"/>
    <id>http://yoursite.com/2016/05/06/iOS中的图形绘制/</id>
    <published>2016-05-06T08:06:56.000Z</published>
    <updated>2016-05-06T08:35:49.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;iOS中如何把图形绘制到屏幕上&lt;/li&gt;
&lt;li&gt;实现绘图的几种方式&lt;ul&gt;
&lt;li&gt;自定义UIView&lt;/li&gt;
&lt;li&gt;自定义CALayer&lt;/li&gt;
&lt;li&gt;实现图层代理 &lt;/li&gt;
&lt;li&gt;获取绘制的好之后的图片，然后显示图片(详情看demo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;iOS中如何把图形绘制到屏幕上&quot;&gt;&lt;a href=&quot;#iOS中如何把图形绘制到屏幕上&quot; class=&quot;headerlink&quot; title=&quot;iOS中如何把图形绘制到屏幕上&quot;&gt;&lt;/a&gt;iOS中如何把图形绘制到屏幕上&lt;/h4&gt;&lt;p&gt;如果你想深入的了解iOS中的绘图，那么你先得了解iOS中几个用于绘图的框架以及他们的由来&lt;/p&gt;
&lt;h4 id=&quot;CoreGraphics框架&quot;&gt;&lt;a href=&quot;#CoreGraphics框架&quot; class=&quot;headerlink&quot; title=&quot;CoreGraphics框架:&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.apple.com/library/tvos/documentation/CoreGraphics/Reference/CoreGraphics_Framework/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;CoreGraphics&lt;/strong&gt;&lt;/a&gt;框架:&lt;/h4&gt;&lt;p&gt;有时候&lt;strong&gt;CoreGrphics&lt;/strong&gt;也会被称为&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/GraphicsImaging/Conceptual/drawingwithquartz2d/Introduction/Introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Quartz 2D&lt;/strong&gt;&lt;/a&gt;，但是我认为这是不准确的，我们来看苹果的官方文档介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Core Graphics framework is a C-based API that is based on the Quartz advanced drawing engine. It provides low-level, lightweight 2D rendering with unmatched output fidelity. You use this framework to handle path-based drawing, transformations, color management, offscreen rendering, patterns, gradients and shadings, image data management, image creation, masking, and PDF document creation, display, and parsing. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;CoreGraphics&lt;/strong&gt;框架是基于&lt;strong&gt;Quartz 2D&lt;/strong&gt;的，并且&lt;strong&gt;UIKit&lt;/strong&gt;框架和&lt;strong&gt;AppKit&lt;/strong&gt;框架也包含了&lt;strong&gt;Quartz 2D&lt;/strong&gt;的一些简单API，如&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIBezierPath_class/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;UIBeizerPath&lt;/em&gt;&lt;/a&gt;就是&lt;strong&gt;UIKit&lt;/strong&gt;框架下用于绘图的API。对于iOS来说，我们所有的图形绘制都是基于&lt;strong&gt;Quartz 2D&lt;/strong&gt;的(后面解释为什么)，但是我们不能说图形绘制都是基于&lt;strong&gt;CoreGraphics&lt;/strong&gt;的，这就是两者的区别所在。&lt;strong&gt;CoreGraphics&lt;/strong&gt;框架下用于绘制图形的API是&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/CGContext/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;CGContextRef&lt;/em&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;UIKit框架：&quot;&gt;&lt;a href=&quot;#UIKit框架：&quot; class=&quot;headerlink&quot; title=&quot;UIKit框架：&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIKit_Framework/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIKit&lt;/a&gt;框架：&lt;/h4&gt;&lt;p&gt;iOS里只要涉及显示的控件基本都是&lt;strong&gt;UIKit&lt;/strong&gt;下的，而图形绘制的API-&lt;em&gt;UIBeizerPath&lt;/em&gt;只是其中很小的一部分功能，这里注意下，我在前文中也有提到，&lt;em&gt;UIBezierPath&lt;/em&gt;是基于&lt;strong&gt;Quartz 2D&lt;/strong&gt;的。&lt;/p&gt;
&lt;h4 id=&quot;QuartzCore框架&quot;&gt;&lt;a href=&quot;#QuartzCore框架&quot; class=&quot;headerlink&quot; title=&quot;QuartzCore框架&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/QuartzCoreRefCollection/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;QuartzCore&lt;/a&gt;框架&lt;/h4&gt;&lt;p&gt;这个框架中用于绘图的API是&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/CALayer_class/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;CALayer&lt;/em&gt;&lt;/a&gt;，用于动画的API是&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/CAAnimation_class/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;CAAnimation&lt;/em&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以在iOS中用于绘图的API有3个，他们分别是&lt;em&gt;CGContextRef&lt;/em&gt;，&lt;em&gt;UIBezierPath&lt;/em&gt;，和&lt;em&gt;CALayer&lt;/em&gt;。&lt;em&gt;CALayer&lt;/em&gt;在绘图的时候，它的底层也是通过&lt;em&gt;CGContextRef&lt;/em&gt;实现的，所以，iOS的绘图都是基于&lt;strong&gt;Quartz 2D&lt;/strong&gt;的。&lt;/p&gt;
&lt;p&gt;绘图并不是随时调用都是有效的，比如你要画一个圆，你在ViewDidLoad中调用它，那么他是不会起作用的，iOS的图形绘制你需要把它加到当前的位图上去，并且在合适的时间调用它。&lt;/p&gt;
&lt;p&gt;有3种方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义UIView&lt;/li&gt;
&lt;li&gt;自定义CALayer&lt;/li&gt;
&lt;li&gt;实现图层代理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文对于成像原理不做深入的了解，对于成像原理有兴趣的同学&lt;a href=&quot;http://objccn.io/issue-3-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;点我&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;实现绘图的几种方式&quot;&gt;&lt;a href=&quot;#实现绘图的几种方式&quot; class=&quot;headerlink&quot; title=&quot;实现绘图的几种方式&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现绘图的几种方式&lt;/strong&gt;&lt;/h4&gt;&lt;h4 id=&quot;1-自定义UIView&quot;&gt;&lt;a href=&quot;#1-自定义UIView&quot; class=&quot;headerlink&quot; title=&quot;1.自定义UIView&quot;&gt;&lt;/a&gt;1.自定义UIView&lt;/h4&gt;&lt;p&gt;要想你的绘制实现，你需要在自定义UIView对象的.m文件中重写drawRect:(CGRect)rect方法，在这个方法中的绘制会显示在屏幕上。&lt;/p&gt;
&lt;p&gt;能触发视图更新的动作，也就是调用drawRect:(CGRect)rect方法的触发条件有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加视图addSubView&lt;/li&gt;
&lt;li&gt;对遮挡您的视图的其它视图进行移动或删除操作&lt;/li&gt;
&lt;li&gt;将视图的hidden属性声明设置为NO，使其从隐藏状态变为可见&lt;/li&gt;
&lt;li&gt;将视图滚出屏幕，然后再重新回到屏幕上&lt;/li&gt;
&lt;li&gt;显式调用视图的setNeedsDisplay或者setNeedsDisplayInRect:方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码示例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自定义一个UIView的子类-重写&lt;code&gt;drawRect:(CGRect)rect&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)drawRect:(CGRect)rect&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super drawRect:rect];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextRef ctx = UIGraphicsGetCurrentContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetLineWidth(ctx, 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //线的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetStrokeColorWithColor(ctx, [UIColor redColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //填充的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetFillColorWithColor(ctx, [UIColor purpleColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  线段头尾部样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  kCGLineCapButt:不绘制端点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  kCGLineCapRound:圆弧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  kCGLineCapSquare:直角&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetLineCap(ctx, kCGLineCapRound);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  拐点样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * kCGLineJoinMiter:直角&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * kCGLineJoinRound:圆弧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * kCGLineJoinBevel:斜角&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetLineJoin(ctx, kCGLineJoinBevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //计算高度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat devideHeight = [[UIScreen mainScreen]bounds].size.height / 5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y1 = 16;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y2 = y1 + devideHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y3 = y1 + devideHeight * 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y4 = y1 + devideHeight * 3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat y5 = y1 + devideHeight * 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat fx = 8;         //字开始的x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat cx = fx + 40;    //绘图开始的x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //设置字体 - 同时也会让画笔的颜色改变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSMutableDictionary *fontDic = [[NSMutableDictionary alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [fontDic setObject:[UIFont systemFontOfSize:14] forKey:NSFontAttributeName];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [fontDic setObject:[UIColor blueColor] forKey:NSForegroundColorAttributeName];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //左右居中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSMutableParagraphStyle *ps = [[NSMutableParagraphStyle alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ps setAlignment:NSTextAlignmentNatural];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [fontDic setObject:ps forKey:NSParagraphStyleAttributeName];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //直线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //上下居中的点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y1 + devideHeight / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSString *string = @&amp;quot;直线&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [string drawAtPoint:CGPointMake(fx, y - 8) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    [string drawInRect:CGRectMake(fx, y1, 60, devideHeight) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetStrokeColorWithColor(ctx, [UIColor redColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextMoveToPoint(ctx, cx, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx, 300, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextStrokePath(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //曲线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y2 + devideHeight / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string = @&amp;quot;曲线&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [string drawAtPoint:CGPointMake(fx, y - 8) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    CGContextMoveToPoint(ctx, cx, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddArc(ctx, cx + devideHeight / 2, y, devideHeight / 2, 0, M_PI / 2, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetStrokeColorWithColor(ctx, [UIColor redColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextStrokePath(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //圆&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y3 + devideHeight / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string = @&amp;quot;圆&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [string drawAtPoint:CGPointMake(fx, y - 8) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetStrokeColorWithColor(ctx, [UIColor redColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddEllipseInRect(ctx, CGRectMake(cx + 100, y3, devideHeight, devideHeight));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextStrokePath(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //矩形&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y4 + devideHeight / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string = @&amp;quot;矩形&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [string drawAtPoint:CGPointMake(fx, y - 8) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetStrokeColorWithColor(ctx, [UIColor redColor].CGColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddRect(ctx, CGRectMake(cx + 36, y4, devideHeight, devideHeight));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextStrokePath(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //也可使用UIBezierPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y5 + devideHeight / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string = @&amp;quot;UIBezierPath绘图&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [string drawAtPoint:CGPointMake(fx, y - 8) withAttributes:fontDic];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBezierPath *path = [[UIBezierPath alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [path addArcWithCenter:CGPointMake(370 / 2, y) radius:devideHeight /4 startAngle:0 endAngle:2*M_PI clockwise:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    [path stroke];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [path fill];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-自定义CALayer&quot;&gt;&lt;a href=&quot;#2-自定义CALayer&quot; class=&quot;headerlink&quot; title=&quot;2.自定义CALayer&quot;&gt;&lt;/a&gt;2.自定义CALayer&lt;/h4&gt;&lt;p&gt;自定义一个CALayer-重写&lt;code&gt;drawInContext:&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)drawInContext:(CGContextRef)ctx&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;3-drawInContext:%@&amp;quot;,ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    CGContextRotateCTM(ctx, M_PI_4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetRGBFillColor(ctx, 135.0/255.0, 232.0/255.0, 84.0/255.0, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetRGBStrokeColor(ctx, 135.0/255.0, 232.0/255.0, 84.0/255.0, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    CGContextFillRect(ctx, CGRectMake(0, 0, 100, 100));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    CGContextFillEllipseInRect(ctx, CGRectMake(50, 50, 100, 100));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextMoveToPoint(ctx, 94.5, 33.5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //// Star Drawing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,104.02, 47.39);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,120.18, 52.16);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,109.91, 65.51);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,110.37, 82.34);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,94.5, 76.7);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,78.63, 82.34);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,79.09, 65.51);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,68.82, 52.16);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextAddLineToPoint(ctx,84.98, 47.39);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextClosePath(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextDrawPath(ctx, kCGPathFillStroke);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体的使用的话下载文末的代码自己看&lt;/p&gt;
&lt;h4 id=&quot;3-图层代理&quot;&gt;&lt;a href=&quot;#3-图层代理&quot; class=&quot;headerlink&quot; title=&quot;3.图层代理&quot;&gt;&lt;/a&gt;3.图层代理&lt;/h4&gt;&lt;p&gt;创建CALayer对象，设置他的代理为当前的视图控制器，实现代理方法&lt;code&gt;drawLayer:inContext:&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# pragma mark 图层代理绘图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)creatLayer&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //阴影图层&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CALayer *layerShadow = [[CALayer alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.backgroundColor = [[UIColor blueColor]CGColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.bounds = CGRectMake(0, 0, 100, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.position = self.view.center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.cornerRadius = 100 / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.shadowColor = [UIColor grayColor].CGColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.shadowOffset = CGSizeMake(10, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layerShadow.shadowOpacity = 0.8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.view.layer addSublayer:layerShadow];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer = [[CALayer alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.backgroundColor = [UIColor purpleColor].CGColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.bounds = CGRectMake(0, 0, 100, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.position = self.view.center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.cornerRadius = 100 / 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.masksToBounds = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //图形上下文形变，图片倒立问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    layer.transform = CATransform3DMakeRotation(M_PI, 1, 0, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_layer setValue:@M_PI forKeyPath:@&amp;quot;transform.rotation.x&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //设置外边框&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.borderColor = [UIColor greenColor].CGColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.borderWidth = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //a1设置代理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layer.delegate = self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_layer setNeedsDisplay];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //b1直接设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    UIImage *image = [UIImage imageNamed:@&amp;quot;girl&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    [layer setContents:(id)image.CGImage];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.view.layer addSublayer:_layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSaveGState(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat width = layer.bounds.size.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;图层代理&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    //图形上下文形变，图片倒立问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    CGContextScaleCTM(ctx, 1, -1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    CGContextTranslateCTM(ctx, 0, -width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *image = [UIImage imageNamed:@&amp;quot;girl&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextDrawImage(ctx, CGRectMake(0, 0, width, width), image.CGImage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextRestoreGState(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码下载：&lt;br&gt;&lt;a href=&quot;https://github.com/codeTalkCC/blog-draw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub地址&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;首页与3个界面的效果图分别如下：&quot;&gt;&lt;a href=&quot;#首页与3个界面的效果图分别如下：&quot; class=&quot;headerlink&quot; title=&quot;首页与3个界面的效果图分别如下：&quot;&gt;&lt;/a&gt;首页与3个界面的效果图分别如下：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/6b390b910f0f0723a1d1ce96c93b82058240873c/iOS%E4%B8%AD%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/IMG_1786.jpg&quot; alt=&quot;首页&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/6b390b910f0f0723a1d1ce96c93b82058240873c/iOS%E4%B8%AD%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/IMG_1787.jpg&quot; alt=&quot;自定义UIView&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/6b390b910f0f0723a1d1ce96c93b82058240873c/iOS%E4%B8%AD%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/IMG_1788.jpg&quot; alt=&quot;自定义CALayer&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/codeTalkCC/ArcitlePhotos/6b390b910f0f0723a1d1ce96c93b82058240873c/iOS%E4%B8%AD%E7%9A%84%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6/IMG_1789.jpg&quot; alt=&quot;图层代理&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;iOS中如何把图形绘制到屏幕上&lt;/li&gt;
&lt;li&gt;实现绘图的几种方式&lt;ul&gt;
&lt;li&gt;自定义UIView&lt;/li&gt;
&lt;li&gt;自定义CALayer&lt;/li&gt;
&lt;li&gt;实现图层代理 &lt;/li&gt;
&lt;li&gt;获取绘制的好之后的图片，然后显示图片(详情看demo)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
